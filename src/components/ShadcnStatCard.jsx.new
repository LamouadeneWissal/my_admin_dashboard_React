import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from './ui/card';
import { cn } from '../lib/utils';

/**
 * ShadcnStatCard Component
 * 
 * Un composant de carte de statistiques basé sur Shadcn UI pour afficher des métriques 
 * avec des options de couleur cohérentes et une icône.
 * 
 * @param {string} title - Titre de la carte
 * @param {string|number} value - Valeur à afficher
 * @param {string} icon - Icône (emoji ou JSX) à afficher
 * @param {string} color - Couleur du thème (blue, green, red, purple, yellow)
 * @param {string} className - Classes CSS additionnelles
 * @returns {JSX.Element} - Carte de statistiques stylisée
 */
function ShadcnStatCard({ title, value, icon, color = 'blue', className }) {
  // Define colors for different states (keeping the same color system)
  const colorVariants = {
    blue: {
      bg: 'bg-blue-50',
      text: 'text-blue-700',
      icon: 'text-blue-500',
      border: 'border-blue-100',
      iconBg: 'bg-blue-100',
      progress: 'bg-blue-500'
    },
    green: {
      bg: 'bg-green-50',
      text: 'text-green-700',
      icon: 'text-green-500',
      border: 'border-green-100',
      iconBg: 'bg-green-100',
      progress: 'bg-green-500'
    },
    red: {
      bg: 'bg-red-50',
      text: 'text-red-700',
      icon: 'text-red-500',
      border: 'border-red-100',
      iconBg: 'bg-red-100',
      progress: 'bg-red-500'
    },
    purple: {
      bg: 'bg-purple-50',
      text: 'text-purple-700',
      icon: 'text-purple-500',
      border: 'border-purple-100',
      iconBg: 'bg-purple-100',
      progress: 'bg-purple-500'
    },
    yellow: {
      bg: 'bg-yellow-50',
      text: 'text-yellow-700',
      icon: 'text-yellow-500',
      border: 'border-yellow-100',
      iconBg: 'bg-yellow-100',
      progress: 'bg-yellow-500'
    }
  };

  const selectedColor = colorVariants[color] || colorVariants.blue;

  return (
    <Card 
      className={cn(
        "border overflow-hidden transition-all duration-300 transform hover:-translate-y-1 hover:shadow-lg", 
        selectedColor.border, 
        selectedColor.bg,
        className
      )}
    >
      <CardHeader className="flex flex-row items-center justify-between pb-2 space-y-0 border-b border-opacity-10 border-gray-300">
        <CardTitle className="text-base font-medium text-gray-700">{title}</CardTitle>
        <div className={cn("flex h-12 w-12 items-center justify-center rounded-xl shadow-sm", selectedColor.iconBg)}>
          <span className={cn("text-2xl", selectedColor.icon)}>{icon}</span>
        </div>
      </CardHeader>
      <CardContent className="pt-4">
        <div className="text-3xl font-bold text-gray-800">{value}</div>
        <div className="mt-4 h-1.5 w-full rounded-full bg-gray-100 overflow-hidden">
          <div 
            className={cn("h-1.5 rounded-full", selectedColor.progress)}
            style={{ width: '70%' }}  // Cette valeur pourrait être passée en prop
          />
        </div>
      </CardContent>
    </Card>
  );
}

// Named export for destructuring imports
export { ShadcnStatCard };

// Default export for traditional imports
export default ShadcnStatCard;
